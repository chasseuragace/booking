openapi: 3.0.3
info:
  title: Booking API
  description: This API allows users to manage bookings, including creating bookings, updating their status, and retrieving booking data.
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
    description: Local development server

paths:
  /bookings/book:
    post:
      summary: Create a new booking
      operationId: createBooking
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                entityId:
                  type: string
                  example: "123e4567-e89b-12d3-a456-426614174000"
                userId:
                  type: string
                  example: "321e4567-e89b-12d3-a456-426614174000"
                startAt:
                  type: string
                  format: date-time
                  example: "2024-09-10T14:00:00Z"
                endAt:
                  type: string
                  format: date-time
                  example: "2024-09-10T16:00:00Z"
                additionalInfo:
                  type: string
                  example: "Booking for conference room."
      responses:
        '201':
          description: Booking created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /bookings/book/{id}/status:
    patch:
      summary: Update booking status
      operationId: updateStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            example: "123e4567-e89b-12d3-a456-426614174000"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: "confirmed"
      responses:
        '200':
          description: Booking status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Booking'
        '404':
          description: Booking not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /bookings:
    get:
      summary: List all bookings
      operationId: listBookings
      responses:
        '200':
          description: List of all bookings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /bookings/filtered:
    get:
      summary: List filtered bookings
      operationId: listFilteredBookings
      parameters:
        - name: userIds
          in: query
          schema:
            type: string
            description: Comma-separated list of user IDs to filter by
            example: "321e4567-e89b-12d3-a456-426614174000,123e4567-e89b-12d3-a456-426614174000"
        - name: entityIds
          in: query
          schema:
            type: string
            description: Comma-separated list of entity IDs to filter by
            example: "123e4567-e89b-12d3-a456-426614174000"
        - name: statuses
          in: query
          schema:
            type: string
            description: Comma-separated list of statuses to filter by
            example: "pending,confirmed"
      responses:
        '200':
          description: List of filtered bookings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Booking'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Booking:
      type: object
      properties:
        id:
          type: string
          example: "123e4567-e89b-12d3-a456-426614174000"
        entityId:
          type: string
          example: "entity-id-001"
        userId:
          type: string
          example: "user-id-001"
        status:
          type: string
          example: "pending"
        createdAt:
          type: string
          format: date-time
          example: "2024-09-01T14:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-09-01T14:00:00Z"
        startAt:
          type: string
          format: date-time
          example: "2024-09-10T14:00:00Z"
        endAt:
          type: string
          format: date-time
          example: "2024-09-10T16:00:00Z"
        completedAt:
          type: string
          format: date-time
          nullable: true
          example: null
        bookingInfo:
          type: string
          example: "Booking for conference room."
    Error:
      type: object
      properties:
        error:
          type: string
          example: "Something went wrong"
